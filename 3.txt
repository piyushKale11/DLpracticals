import tensorflow as tf
import matplotlib.pyplot as plt
from tensorflow import keras
import random
from keras.layers import Conv2D,Dense,Flatten,Dropout,MaxPooling2D
from keras.models import Sequential


mnist = tf.keras.datasets.mnist
(x_train,y_train),(x_test,y_test)=mnist.load_data()

x_train=x_train.reshape(x_train.shape[0],28,28,1)
x_test=x_test.reshape(x_test.shape[0],28,28,1)

x_train=x_train/255
x_test=x_test/255

model=Sequential()
model.add(Conv2D(28,kernel_size=(3,3),input_shape=(28,28,1)))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Flatten())
model.add(Dense(200,activation="relu"))
model.add(Dropout(0.3))
model.add(Dense(10,activation="softmax"))
model.summary()

model.compile(optimizer="adam",
              loss="sparse_categorical_crossentropy",
              metrics=["accuracy"])

history=model.fit(x_train,y_train,validation_data=(x_test,y_test),epochs=3)

test_loss,test_acc=model.evaluate(x_test,y_test)
print(f"Loss:{test_loss}")
print(f"Accuracy:{test_acc}")

n=random.randint(0,9999)
plt.imshow(x_test[n])
plt.show()